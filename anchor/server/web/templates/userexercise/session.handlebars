<div class="container-fluid h-100">
  <div style="padding: 30px;">
    <input hidden id="numSets">
    <input hidden="numReps">
    <div class="row mh1">
      <div class="col-md-9">
        <canvas id="outputCanvas" class="bodyCanvas"></canvas>
      </div>
      <div class="col-md-3 text-center col-v-centered no-float">
        <div class="black margin-top-p30">
          <p class="large">Current Exercise</p>
          <div class= "small" style="line-height: 15px;">
            {{#compare type 'practice'}}
              <p>{{numRepetition}} {{formatName exercise.exerciseName}}s</p>
              <p>Set {{setNumber}} of {{numSets}}</p>
            {{/compare}}
            {{#compare type 'reference'}}
              <p>{{formatName exercise.exerciseName}}</p>
              <p>Reference</p>
            {{/compare}}
          </div>
        </div>
        {{#if isComplete}}
          <div class="curiousBlueColor secondSection">
            <p>Congratulations!</p>
            <p>You completed all your sets!</p>
          </div>
          {{#if user.roles.clinician}}
            <button type="button" class="btn btn-primary blueBackground white actionBtn" onclick="goTodashBoard()">Go to Patients page</button>
            <button type="button" class="btn btn-primary curiousBlue white actionBtn" onclick="goToExercises()" style="margin-top:10px;">Go to Exercises page</button>
          {{else}}
            <button type="button" class="btn btn-primary curiousBlue white actionBtn" onclick="goTodashBoard()">Go to Exercises page</button>
          {{/if}}
        {{else}}
        <div class="curiousBlueColor secondSection">
          {{#compare mode 'start'}}
            <p>To begin the set,</p>
            <p>click Start.</p>
          {{/compare}}
          {{#compare mode 'play'}}
            <p>To end the set,</p>
            <p>click Stop.</p>
          {{/compare}}
          {{#compare mode 'stop'}}
            <p>Set ended.</p>
            <p class="small">What would you like to do?</p>
          {{/compare}}
        </div>
        <div>
          {{#compare mode 'start'}}
            <button type="button" class="btn btn-primary blueBackground white actionBtn" onclick="action('play','{{type}}')">START</button>
          {{/compare}}
          {{#compare mode 'play'}}
              <button type="button" class="red white actionBtn btn btn-primary" onclick="action('stop', '{{type}}')">STOP</button>
          {{/compare}}
          {{#compare mode 'stop'}}
            {{#compare type 'reference'}}
              <button class="btn btn-primary blueBackground white actionBtn" onclick="saveReference()">SAVE REFERENCE</button>
            {{/compare}}
            {{#compare type 'practice'}}
              <button class="btn btn-primary blueBackground white actionBtn" onclick="savePractice()">SAVE SET</button>
            {{/compare}}
            <button class="btn btn-primary red actionBtn" id="discard" onclick="action('start', '{{type}}')">DISCARD & RESTART</button>
          {{/compare}}
        </div>
        {{/if}}
      </div>
    </div>
  </div>
</div>

<link rel="stylesheet" href="/public/css/styleSheet/session.css">
<link rel="stylesheet" href="/public/css/styleSheet/color.css">
<link rel="stylesheet" href="/public/css/styleSheet/genericStyles.css">
<script type="text/javascript" src="/public/scripts/userexercise/session.js"></script>
<script src="/public/data.js"></script>
<script src="/public/bundle.js"></script>
<script type="text/javascript" src="/public/scripts/index.js"></script>
<!--<script>-->
  <!--$(document).ready(function () {-->
    <!--var canvasSKLT = document.getElementById('bodyCanvas');-->
    <!--var ctx1 = canvasSKLT.getContext('2d');-->
    <!--var colors = ['#ff0000', '#00ff00', '#0000ff', '#ffff00', '#00ffff', '#ff00ff'];-->

    <!--// Globals:-->
    <!--var radius=9;-->
    <!--var width = canvasSKLT.width;-->
    <!--var height = canvasSKLT.height;-->

    <!--var IntervalID;-->

    <!--var index = 0;-->

    <!--function anim() {-->
      <!--if (index < data.bodyFrames.length) {-->
        <!--clientActive = true;-->
        <!--liveupdateCanvas1(data.bodyFrames[index],0);-->
        <!--index++;-->
      <!--} else {-->
        <!--index = 0;-->
      <!--}-->
      <!--setTimeout(anim, 20);-->
    <!--}-->

    <!--/*data.bodyFrames.forEach(function(frame){-->
      <!--clientActive = true;-->
      <!--liveupdateCanvas1(frame,0);-->
    <!--});*/-->
    <!--anim();-->


    <!--// Functions-->

    <!--function drawCircle(x, y, r, color){ // Not used in current code-->
      <!--ctx1.beginPath();-->
      <!--ctx1.strokeStyle=color;-->
      <!--ctx1.arc(x, y,r,0,Math.PI*2);-->
      <!--ctx1.stroke();-->
    <!--}-->

    <!--function drawBody(body){-->
      <!--//drawCircle(50, 50, 10, "green");-->
      <!--jointType = [7,6,5,4,2,8,9,10,11,10,9,8,2,3,2,1,0,12,13,14,15,14,13,12,0,16,17,18,19] //re visit and draw in a line-->
      <!--jointType.forEach(function(jointType){-->
        <!--drawJoints(body.joints[jointType].depthX * width, body.joints[jointType].depthY * height);-->
      <!--});-->
      <!--drawCenterCircle(width/2, height/5, 50, body.joints[2].depthX * width, body.joints[2].depthY * height);-->

      <!--ctx1.beginPath();-->
      <!--ctx1.moveTo(body.joints[7].depthX * width, body.joints[7].depthY * height);-->
      <!--jointType.forEach(function(jointType){-->
        <!--ctx1.lineTo(body.joints[jointType].depthX * width, body.joints[jointType].depthY * height);-->
        <!--ctx1.moveTo(body.joints[jointType].depthX * width, body.joints[jointType].depthY * height);-->
      <!--});-->
      <!--ctx1.lineWidth=10;-->
      <!--ctx1.strokeStyle='blue';-->
      <!--ctx1.stroke();-->
      <!--ctx1.closePath();-->
    <!--}-->

    <!--function drawJoints(cx,cy){-->
      <!--ctx1.beginPath();-->
      <!--ctx1.arc(cx,cy,radius,0,Math.PI*2); //radius is a global variable defined at the beginning-->
      <!--ctx1.closePath();-->
      <!--ctx1.fillStyle = "yellow";-->
      <!--ctx1.fill();-->
    <!--}-->
    <!--// Draw Center Circle in ctx1 (canvasSKLT)-->
    <!--function drawCenterCircle(x, y, r, nx, ny){-->
      <!--ctx1.beginPath();-->
      <!--if(nx > x-r && nx < x+r && ny > y-r && ny < y+r)-->
        <!--ctx1.strokeStyle="green";-->
      <!--else-->
        <!--ctx1.strokeStyle="red";-->

      <!--ctx1.arc(x, y,r,0,Math.PI*2);-->
      <!--ctx1.stroke();-->
      <!--ctx1.closePath();-->
      <!--ctx1.strokeStyle="black";-->
    <!--}-->


    <!--function liveupdateCanvas1(bodyFrame, tracingID){-->
      <!--ctx1.clearRect(0, 0, width, height);-->
      <!--//drawCircle(ctx1, 50, 50, 10, "red"); removed if following code line works-->
      <!--//drawCenterCircle(width/2, height/5, 50, body.joints[2].depthX * width, body.joints[2].depthY * height);-->
      <!--if (tracingID == -1){-->
        <!--bodyFrame.bodies.some(function(body){-->
          <!--if(body.tracked){ drawBody(body); return(body.tracked);}-->
        <!--});-->
      <!--}-->
      <!--else {-->
        <!--bodyFrame.bodies.forEach(function(body){-->
          <!--if (body.hasOwnProperty("joints")) {-->
            <!--drawBody(body);-->
          <!--}-->
        <!--});-->
      <!--}-->
    <!--}-->

    <!--function animateCanvas1(bufferBodyFrames,tracingID){-->
      <!--var i = 0;-->
      <!--var TimerID = setInterval(function(){-->
        <!--liveupdateCanvas1(bufferBodyFrames[i], tracingID);-->
        <!--i++;-->
        <!--if (i>=bufferBodyFrames.length){i=0;}-->
      <!--},20);-->
      <!--return TimerID;-->
    <!--}-->
  <!--});-->
<!--</script>-->

